name: Qt

on:
  push:
    paths:
      - "qt/**"
      - ".github/workflows/Build-qt.yml"
  pull_request:
    paths:
      - "qt/**"
      - ".github/workflows/Build-qt.yml"

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04] # , windows-latest
        compiler_version:
          - 9
        compiler:
          - gcc
        build_type:
          - Release
        shared:
          - "False"
        qt_version:
          - 5.15.1
    env:
      QT_OPTIONS: >-
        --options qt:GUI=True
        --options qt:qtsvg=True
        --options qt:widgets=True
        --options qt:qtdeclarative=True
        --options qt:qtmultimedia=True
        --options qt:qtxmlpatterns=True
        --options qt:qttranslations=True
        --options qt:qtquickcontrols=True
        --options qt:qtquickcontrols2=True
        --options qt:qtx11extras=True
        --options qt:qtimageformats=True
        --options qt:qtgraphicaleffects=True
        --options qt:qttools=True
        --options qt:qtconnectivity=True
        --options qt:qtnetworkauth=True
        --options qt:with_freetype=True
        --options qt:with_pq=False
        --options qt:with_odbc=False
        --options qt:with_mysql=False
        --options qt:with_sqlite3=False
        --options qt:with_fontconfig=False

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - uses: actions/setup-python@v2
        with:
          python-version: '3.x'
          architecture: 'x64'

      - name: Dirs
        run: >-
         mkdir -p ${{ github.workspace }}/deps                         &&
         echo "Runner workspace: $RUNNER_WORKSPACE"                    &&
         echo "Github workspace: ${{ github.workspace }}"              &&
         echo "Home dir: $HOME"

      - name: install packages
        run: >-
          sudo sed -Ei 's/^# deb-src /deb-src /' /etc/apt/sources.list &&
          sudo apt-get update                                          &&
          DEBIAN_FRONTEND=noninteractive sudo apt-get install -y software-properties-common sudo gcc-9 g++-9 build-essential perl python python3 python3-pip git make cmake libfontconfig1-dev libxcb1-dev libx11-dev libc6-dev libgl1-mesa-dev '^libxcb.*-dev' libx11-xcb-dev libglu1-mesa-dev libxrender-dev libxi-dev xcb-proto xorg-dev wget fuse                                 &&
          sudo apt-get -y build-dep qt5-default                        &&
          pip install conan                                            &&
          echo "pip version: $(pip --version)"                         &&
          echo "conan version: $(conan --version)"

      - name: Setup conan
        run: >-
          conan remote add bincrafters https://api.bintray.com/conan/bincrafters/public-conan         &&
          conan remote add myremote "${{ secrets.CONAN_SERVER }}" --insert                            &&
          conan user -p "${{ secrets.CONAN_PASS }}" -r myremote "${{ secrets.CONAN_USER }}"           &&
          conan profile new default --detect                                                          &&
          conan profile update settings.compiler.libcxx=libstdc++11 default                           &&
          conan profile update settings.compiler=${{ matrix.compiler }} default                       &&
          conan profile update settings.compiler.version=${{ matrix.compiler_version }} default       &&
          conan remote list

      - name: Generating dependency graph
        run: >-
          set -x &&
          conan search "qt/${{ matrix.qt_version}}" -r=all &&
          conan search "qt/${{ matrix.qt_version}}" -r=myremote &&
          conan info    --update                                       \
                        --settings build_type=${{ matrix.build_type }} \
                        --options *:shared=${{ matrix.shared }}        \
                        ${QT_OPTIONS}                                  \
                        qt/${{ matrix.qt_version}}@bincrafters/stable  \
                        --graph=${{ github.workspace }}/deps/${{ matrix.qt_version}}.html

      - uses: actions/upload-artifact@master
        with:
          name: dependency-graphs
          path: deps

      - name: Conan install Qt
        run: >-
          set -x &&
          conan install --update                                        \
                        --settings build_type=${{ matrix.build_type }}  \
                        --generator cmake                               \
                        --build=missing                                 \
                        --build=outdated                                \
                        --build=cascade                                 \
                        --options *:shared=${{ matrix.shared }}         \
                        ${QT_OPTIONS}                                   \
                        qt/${{ matrix.qt_version}}@bincrafters/stable   &&
          conan upload "*" --all --confirm -r=myremote
