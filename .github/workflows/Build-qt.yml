name: Qt

on:
  push:
    paths:
      - ".github/actions/conan/**"
      - ".github/workflows/Build-qt.yml"
  pull_request:
    paths:
      - ".github/actions/conan/**"
      - ".github/workflows/Build-qt.yml"

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04] # , windows-latest
        compiler_version:
          - 9
        compiler:
          - gcc
        build_type:
          - Release
        shared:
          - "False"
        qt_version:
          - 5.15.1
    env:
      CONAN_REMOTE_PSWD: ${{ secrets.CONAN_REMOTE_PSWD }}
      QT_OPTIONS: >-
        --options qt:GUI=True
        --options qt:qtsvg=True
        --options qt:widgets=True
        --options qt:qtdeclarative=True
        --options qt:qtmultimedia=True
        --options qt:qtxmlpatterns=True
        --options qt:qttranslations=True
        --options qt:qtquickcontrols=True
        --options qt:qtquickcontrols2=True
        --options qt:qtx11extras=True
        --options qt:qtimageformats=True
        --options qt:qtgraphicaleffects=True
        --options qt:qttools=True
        --options qt:qtconnectivity=True
        --options qt:qtnetworkauth=True
        --options qt:with_freetype=True
        --options qt:with_pq=False
        --options qt:with_odbc=False
        --options qt:with_mysql=False
        --options qt:with_sqlite3=False
        --options qt:with_fontconfig=False

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Prepare action
        uses: ./.github/actions/conan

      - run: >-
          mkdir -p $RUNNER_WORKSPACE/Dockerfiles/deps &&
          wget -O /tmp/rclone.deb https://github.com/rclone/rclone/releases/download/v1.53.1/rclone-v1.53.1-linux-amd64.deb &&
          sudo apt install /tmp/rclone.deb &&
          mkdir -p "$RUNNER_WORKSPACE/.conan_server/data/" &&
          cp -v "$RUNNER_WORKSPACE/Dockerfiles/qt/server.conf" "$RUNNER_WORKSPACE/.conan_server/" &&
          rclone mount :s3:myconan2/conan_server/data/ "$RUNNER_WORKSPACE/.conan_server/data/" --s3-endpoint=${S3_ENDPOINT} --s3-provider=${S3_PROVIDER} --s3-region=${S3_REGION} --s3-access-key-id=${S3_ACCESS_KEY_ID} --s3-secret-access-key=${S3_SECRET_ACCESS_KEY} --s3-max-upload-parts=1000 --vfs-cache-mode full --no-modtime &&
          ls -lah $RUNNER_WORKSPACE/.conan_server/data/

      - run: echo "$RUNNER_WORKSPACE"

      - name: Generating dependency graph
        uses: ./.github/actions/conan
        with:
          conan_cmd: >-
            echo ${QT_OPTIONS}         &&
            ls -lah /github/           &&
            ls -lah /github/workspace/ &&
            conan profile update settings.compiler=${{ matrix.compiler }} default                   &&
            conan profile update settings.compiler.version=${{ matrix.compiler_version }} default   &&
            conan info    --update                                       \
                          --settings build_type=${{ matrix.build_type }} \
                          --options *:shared=${{ matrix.shared }}        \
                          ${QT_OPTIONS}                                  \
                          qt/${{ matrix.qt_version}}@bincrafters/stable  \
                          --graph=/github/workspace/deps/${{ matrix.qt_version}}.html &&
            ls -lah /github/workspace/deps/

      - uses: actions/upload-artifact@master
        with:
          name: dependency-graphs
          path: deps

      - name: Conan install Qt
        env:
          CONAN_REMOTE_PSWD: ${{ secrets.CONAN_REMOTE_PSWD }}

        uses: ./.github/actions/conan
        with:
          conan_cmd: >-
            conan profile update settings.compiler=${{ matrix.compiler }} default                   &&
            conan profile update settings.compiler.version=${{ matrix.compiler_version }} default   &&
            conan install --update                                       \
                          --settings build_type=${{ matrix.build_type }} \
                          --generator cmake                              \
                          --build=missing                                \
                          --build=outdated                               \
                          --build=cascade                                \
                          --options *:shared=${{ matrix.shared }}        \
                          ${QT_OPTIONS}                                  \
                          qt/${{ matrix.qt_version}}@bincrafters/stable

            # conan upload "*" --all --confirm -r=myremote
